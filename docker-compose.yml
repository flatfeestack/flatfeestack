version: "3.9"

services:

  auth:
    image: ghcr.io/flatfeestack/flatfeestack/fastauth:${TAG_IMAGE:-latest}
    profiles:
      - "flatfeestack"
    build: ./fastauth
    restart: always
    env_file:
      - ${BASE_PATH:-.}/fastauth/.env
    ports:
      - "9081:9081"
    depends_on:
      db:
        condition: service_healthy

  backend:
    image: ghcr.io/flatfeestack/flatfeestack/backend:${TAG_IMAGE:-latest}
    profiles:
      - "flatfeestack"
    build: ./backend
    restart: always
    env_file:
      - ${BASE_PATH:-.}/backend/.env
    ports:
      - "9082:9082"
    extra_hosts:
      - ${EXTRA_HOSTS:-localhost:127.0.0.1}
    depends_on:
      db:
        condition: service_healthy

  analyzer:
    image: ghcr.io/flatfeestack/flatfeestack/analyzer:${TAG_IMAGE:-latest}
    profiles:
      - "flatfeestack"
    build: ./analyzer
    restart: always
    env_file:
      - ${BASE_PATH:-.}/analyzer/.env
    volumes:
      - ${BASE_PATH:-.}/.repos:/tmp/repos
    ports:
      - "9083:9083"
    extra_hosts:
      - ${EXTRA_HOSTS:-localhost:127.0.0.1}

  payout:
    image: ghcr.io/flatfeestack/flatfeestack/payout:${TAG_IMAGE:-latest}
    profiles:
      - "dao"
      - "flatfeestack"
    build: ./payout
    restart: always
    env_file:
      - ${BASE_PATH:-.}/payout/.env
    ports:
      - "9084:9084"
    extra_hosts:
      - ${EXTRA_HOSTS:-localhost:127.0.0.1}

  frontend:
    image: ghcr.io/flatfeestack/flatfeestack/frontend:${TAG_IMAGE:-latest}
    profiles:
      - "flatfeestack"
    build: ./frontend
    ports:
      - "9085:9085"

  db:
    image: postgres:15-alpine
    profiles:
      - "flatfeestack"
    volumes:
      - ${BASE_PATH:-.}/.db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ${BASE_PATH:-.}/db/.env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 30

  caddy:
    image: ghcr.io/flatfeestack/flatfeestack/caddy:${TAG_IMAGE:-latest}
    profiles:
      - "dao"
      - "flatfeestack"
    build: ./caddy
    ports:
      - "8080:8080"
    extra_hosts:
      - ${EXTRA_HOSTS:-localhost:127.0.0.1}

  ganache:
    #https://stackoverflow.com/questions/30233105/docker-compose-up-for-only-certain-containers
    profiles:
      - "dao"
    command: '--database.dbPath "/ganache" --logging.verbose --wallet.accounts "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80,100000000000000000000" --wallet.accounts "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d,100000000000000000000" --wallet.accounts "0xa267530f49f8280200edf313ee7af6b827f2a8bce2897751d06a843f644967b1,100000000000000000000" --wallet.accounts "0xdf57089febbacf7ba0bc227dafbffa9fc08a93fdc68e1e42411a14efcf23656e,100000000000000000000" -b 12 --miner.timestampIncrement "12"'
    image: "trufflesuite/ganache:v7.5.0"
    ports:
      - "8545:8545"
    volumes:
      - ${BASE_PATH:-.}/.chain:/ganache
    #I tried geth, but geth does not support eth_mine and eth_increaseTime. There is a pull request, that would solve
    #it, but its not going to be included anytime soon: https://github.com/ethereum/go-ethereum/pull/16834
    #libfaketime does not work with golang: https://github.com/wolfcw/libfaketime/issues/195
    #command: --dev --dev.period=2 --http --http.api=eth,web3,personal,net --http.corsdomain="http://remix.ethereum.org" --datadir=/tmp/chain --http.addr=0.0.0.0 --mine --miner.threads=1 --miner.noverify
