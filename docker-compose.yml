version: "3"

volumes:
  postgres_data:

services:
  auth:
    container_name: flatfeestack-auth
    build: ./fastauth
    environment:
      - DEV=test
      - USERS=info@flatfeestack.io:pw1;jonas@flatfeestack.io:pw2

  analysis-engine:
    container_name: flatfeestack-analysis-engine
    build: ./analysis-engine
    environment:
      - WEBHOOK_CALLBACK_URL=${WEBHOOK_CALLBACK_URL}

  api:
    container_name: flatfeestack-api
    build: ./api
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - STRIPE_SECRET=${STRIPE_SECRET}
    depends_on:
      - db

  scheduler:
    container_name: flatfeestack-scheduler
    build: ./scheduler
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - db

  payout:
    container_name: flatfeestack-payout
    build: ./payout
    environment:
      - ETH_PK=${ETH_PK}
      - ETH_CONTRACT=${ETH_CONTRACT}

  db:
    container_name: flatfeestack-db
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  reverse-proxy:
    container_name: flatfeestack-caddy
    image: caddy:2-alpine
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    extra_hosts:
      - ${HOSTS}
    ports:
      - "80:80"

  frontend:
    container_name: flatfeestack-frontend
    build: ./frontend
