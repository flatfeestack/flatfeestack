version: "3"

services:

  #######################
  # Applications:
  #######################

  auth:
    container_name: flatfeestack-auth
    image: ghcr.io/flatfeestack/flatfeestack/fastauth:${TAG_IMAGE:-latest}
    build: ./fastauth
    ports:
      - 9081:9081
    environment:
      - ENV=local
      - DEV=test
      - USERS=tom@tom.tom:12345678
      - PORT=9081
      - EMAIL_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtYWlsX2Zyb20iOiJuby1yZXBseUBmbGF0ZmVlc3RhY2suaW8iLCJtYWlsX3RvIjoidG9tQGJvY2VrLmNoIiwic3ViIjoiYmFja2VuZCJ9.T8tvPLHx6NSonGgmE11MSumUlZ2RSQx5dULrX4E1PcY
      - EMAIL_URL=https://nope.ch/mailer
      - EMAIL_PREFIX=http://localhost
      - DB_PATH=postgresql://postgres:password@db:5432/flatfeestack?sslmode=disable
      - DB_DRIVER=postgres
      - DB_SCRIPTS=rmdb.sql:init.sql
      - ADMINS=tom.1@bocek.ch;tom.2@bocek.ch;tom.3@bocek.ch;tom.4@bocek.ch;tom.5@bocek.ch;tom.6@bocek.ch
    depends_on:
      db:
        condition: service_healthy

  backend:
    container_name: flatfeestack-backend
    image: ghcr.io/flatfeestack/flatfeestack/backend:${TAG_IMAGE:-latest}
    build: ./backend
    ports:
      - 9082:9082
    environment:
      - PORT=9082
    depends_on:
      db:
        condition: service_healthy

  analysis-engine:
    container_name: flatfeestack-analysis-engine
    image: ghcr.io/flatfeestack/flatfeestack/analysis-engine:${TAG_IMAGE:-latest}
    build: ./analysis-engine
    ports:
      - 9083:9083
    environment:
      - PORT=9083

  payout:
    container_name: flatfeestack-payout
    image: ghcr.io/flatfeestack/flatfeestack/payout:${TAG_IMAGE:-latest}
    build: ./payout
    ports:
      - 9084:9084
    extra_hosts:
      - ${HOSTS}
    depends_on:
      - openethereum
    environment:
      - PORT=9084
      - DEPLOY=true

  frontend:
    container_name: flatfeestack-frontend
    image: ghcr.io/flatfeestack/flatfeestack/frontend:${TAG_IMAGE:-latest}
    build: ./frontend
    ports:
      - 9085:9085
    environment:
      - PORT=9085

  #######################
  # Infrastructure:
  #######################

  db:
    container_name: flatfeestack-db
    image: postgres:13-alpine
    user: "${UID_GID}"
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ./.db:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/0-init.sql
      - ./fastauth/init.sql:/docker-entrypoint-initdb.d/1-init.sql
    ports:
      - 5432:5432
    #https://docs.docker.com/engine/reference/builder/#healthcheck
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 15
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=flatfeestack

  reverse-proxy:
    container_name: flatfeestack-caddy
    image: caddy:2-alpine
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    extra_hosts:
      - ${HOSTS}
    ports:
      - 80:80

  #https://openethereum.wiki/Private-development-chain/
  openethereum:
    container_name: flatfeestack-openethereum
    image: openethereum/openethereum:v3.1.1
    ports:
      - 8545:8545
      - 8546:8546
    volumes:
      - ./.chain:/tmp/chain
    command: --chain=dev --jsonrpc-interface=all --jsonrpc-hosts=all --jsonrpc-apis=all --jsonrpc-cors='*' --base-path=/tmp/chain
