name: Test components and build images

on:
  push:
  workflow_dispatch:

jobs:
  build-test-analyzer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build test container
        uses: docker/build-push-action@v4
        with:
          context: analyzer
          load: true
          target: builder
          tags: ghcr.io/flatfeestack/flatfeestack/analyzer:test

      - name: Run tests
        run: |
          docker run -v $(pwd)/analyzer:/app --rm ghcr.io/flatfeestack/flatfeestack/analyzer:test go test -v ./...

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: analyzer
          load: true
          tags: ghcr.io/flatfeestack/flatfeestack/analyzer:test

      - name: Run analyzer
        run: docker run --env-file analyzer/.example.env --rm -d -p 9083:9083 ghcr.io/flatfeestack/flatfeestack/analyzer:test

      - name: Check if analyzer is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9083

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_PAT_USERNAME }}
          password: ${{ secrets.CR_PAT_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/flatfeestack/flatfeestack/analyzer
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: analyzer
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-backend:
    runs-on: ubuntu-latest
    needs:
      - test-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/flatfeestack/flatfeestack/backend
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CR_PAT_USERNAME }}
          password: ${{ secrets.CR_PAT_TOKEN }}

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: backend
          load: true
          tags: ghcr.io/flatfeestack/flatfeestack/backend:test

      - name: Run Postgres server for testing
        run: docker run --env-file db/.example.env -p 5432:5432 -d postgres:15-alpine

      - name: Run backend
        run: docker run --env-file backend/.example.env -d --network="host" -e DB_PATH=postgresql://postgres:password@127.0.0.1:5432/flatfeestack?sslmode=disable ghcr.io/flatfeestack/flatfeestack/backend:test

      - name: Check if backend is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9082

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
