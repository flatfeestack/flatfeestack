name: Test ETH smart contracts

on:
  push:
    paths:
      - ".github/workflows/smart-contracts-eth.yaml"
      - "smart-contracts-eth/**"
  pull_request:
    paths:
      - ".github/workflows/smart-contracts-eth.yaml"
      - "smart-contracts-eth/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: smart-contracts-eth
    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: "smart-contracts-eth/.nvmrc"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-eth-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-eth-

      - name: Install dependencies
        run: pnpm install

      - name: Check code formatting
        run: pnpm run prettify:check

      - name: Run linter
        run: pnpm run lint

      - name: Run tests with coverage
        run: pnpm run hardhat:coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: smart-contracts-eth/coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
