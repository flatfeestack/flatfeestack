name: Deploy Monitoring

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-monitoring.yaml"
      - "monitoring/**"
  workflow_dispatch:

jobs:
  deploy-monitoring:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: monitoring

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_DROPLET_PRIVATE_KEY }}
          known_hosts: ${{ secrets.DEPLOY_DROPLET_KNOWN_HOST }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip" # caching pip dependencies

      - name: Install Ansible
        run: pip install -r requirements.txt

      - name: Provision Grafana
        run: |
          ansible-galaxy install -r requirements.yml
          ansible-playbook -i ${{ secrets.DROPLET_IP }}, playbook.yaml
        env:
          GRAFANA_POSTGRES_USER_PASSWORD: ${{ secrets.POSTGRES_USER_GRAFANAREADER_PW }}
          GRAFANA_POSTGRES_DB_HOST: ${{ secrets.GRAFANA_POSTGRES_DB_HOST }}

      - name: Deploy monitoring
        run: |
          docker context create monitoring --docker "host=ssh://root@${{ secrets.DROPLET_IP }}"
          docker --context monitoring compose -p "monitoring" up -d --remove-orphans --pull always --wait
          docker --context monitoring system prune -af
          docker --context monitoring ps
        env:
          BASE_PATH: "/root/flatfeestack"
          GRAFANA_ADMIN_PASSWORD: "${{ secrets.GRAFANA_ADMIN_USER }}"
          GRAFANA_ADMIN_USER: "${{ secrets.GRAFANA_ADMIN_PW }}"
          GRAFANA_POSTGRES_DATASOURCE: "${{ secrets.GRAFANA_POSTGRES_DATASOURCE }}"
