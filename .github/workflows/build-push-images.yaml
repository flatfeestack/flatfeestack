name: Build and push images

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
jobs:
  build-and-push-analyzer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean container registry
        run: doctl registry login --expiry-seconds 10000

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: analyzer
          load: true
          tags: "registry.digitalocean.com/flatfeestack/analyzer:${{ github.ref_name }}"
          cache-from: |
            "registry.digitalocean.com/flatfeestack/analyzer:${{ github.ref_name }}"
            "registry.digitalocean.com/flatfeestack/analyzer:main"

      - name: Run analyzer
        run: docker run --env-file analyzer/.example.env --rm -d -p 9083:9083 "registry.digitalocean.com/flatfeestack/analyzer:${{ github.ref_name }}"

      - name: Check if analyzer is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9083

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: analyzer
          push: true
          tags: "registry.digitalocean.com/flatfeestack/analyzer:${{ github.ref_name }}"
          cache-to: type=registry,ref=registry.digitalocean.com/flatfeestack/analyzer:${{ github.ref_name }},mode=max

  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean container registry
        run: doctl registry login --expiry-seconds 10000

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: backend
          load: true
          tags: "registry.digitalocean.com/flatfeestack/backend:${{ github.ref_name }}"
          cache-from: |
            "registry.digitalocean.com/flatfeestack/backend:${{ github.ref_name }}"
            "registry.digitalocean.com/flatfeestack/backend:main"

      - name: Run Postgres server for testing
        run: docker run --env-file db/.example.env -p 5432:5432 -d postgres:15-alpine

      - name: Run backend
        run: docker run --env-file backend/.example.env -d --network="host" -e DB_PATH=postgresql://postgres:password@127.0.0.1:5432/flatfeestack?sslmode=disable registry.digitalocean.com/flatfeestack/backend:${{ github.ref_name }}

      - name: Check if backend is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9082

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: backend
          push: true
          tags: "registry.digitalocean.com/flatfeestack/backend:${{ github.ref_name }}"
          cache-to: type=registry,ref=registry.digitalocean.com/flatfeestack/backend:${{ github.ref_name }},mode=max

  build-and-push-fastauth:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean container registry
        run: doctl registry login --expiry-seconds 10000

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: fastauth
          load: true
          tags: "registry.digitalocean.com/flatfeestack/fastauth:${{ github.ref_name }}"
          cache-from: |
            "registry.digitalocean.com/flatfeestack/fastauth:${{ github.ref_name }}"
            "registry.digitalocean.com/flatfeestack/fastauth:main"

      - name: Run Postgres server for testing
        run: docker run --env-file db/.example.env -p 5432:5432 -d postgres:15-alpine

      - name: Run fastauth
        run: docker run --env-file fastauth/.example.env -d --network="host" -e DB_PATH=postgresql://postgres:password@127.0.0.1:5432/flatfeestack?sslmode=disable registry.digitalocean.com/flatfeestack/fastauth:${{ github.ref_name }}

      - name: Check if fastauth is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9081

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: fastauth
          push: true
          tags: "registry.digitalocean.com/flatfeestack/fastauth:${{ github.ref_name }}"
          cache-to: type=registry,ref=registry.digitalocean.com/flatfeestack/fastauth:${{ github.ref_name }},mode=max

  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean container registry
        run: doctl registry login --expiry-seconds 10000

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: frontend
          load: true
          tags: "registry.digitalocean.com/flatfeestack/frontend:${{ github.ref_name }}"
          cache-from: |
            "registry.digitalocean.com/flatfeestack/frontend:${{ github.ref_name }}"
            "registry.digitalocean.com/flatfeestack/frontend:main"

      - name: Run frontend
        run: docker run --env-file frontend/.example.env --rm -d -p 9085:9085 "registry.digitalocean.com/flatfeestack/frontend:${{ github.ref_name }}"

      - name: Check if frontend is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9085

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: frontend
          push: true
          tags: "registry.digitalocean.com/flatfeestack/frontend:${{ github.ref_name }}"
          cache-to: type=registry,ref=registry.digitalocean.com/flatfeestack/frontend:${{ github.ref_name }},mode=max

  build-and-push-payout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean container registry
        run: doctl registry login --expiry-seconds 10000

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: payout
          load: true
          tags: "registry.digitalocean.com/flatfeestack/payout:${{ github.ref_name }}"
          cache-from: |
            "registry.digitalocean.com/flatfeestack/payout:${{ github.ref_name }}"
            "registry.digitalocean.com/flatfeestack/payout:main"

      - name: Run payout
        run: docker run --env-file payout/.example.env --rm -d -p 9084:9084 -e ETH_URL=https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161 -e NEO_URL=http://seed1t4.neo.org:20332 "registry.digitalocean.com/flatfeestack/payout:${{ github.ref_name }}"

      - name: Check if payout is reachable
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 15
          max_attempts: 5
          command: curl -v localhost:9084

      - name: Push
        uses: docker/build-push-action@v4
        with:
          context: payout
          push: true
          tags: "registry.digitalocean.com/flatfeestack/payout:${{ github.ref_name }}"
          cache-to: type=registry,ref=registry.digitalocean.com/flatfeestack/payout:${{ github.ref_name }},mode=max
