version: "3.9"

services:
  caddy:
    build: ./caddy
    restart: unless-stopped
    volumes:
      - ${BASE_PATH:-.}/caddy/.data:/data
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"

  prometheus:
    image: prom/prometheus:v2.44.0
    restart: unless-stopped
    volumes:
      - ${BASE_PATH:-.}/prometheus/:/etc/prometheus/
      - ${BASE_PATH:-.}/.prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.5.21
    restart: unless-stopped
    volumes:
      - ${BASE_PATH:-.}/.grafana_data:/var/lib/grafana
      - ${BASE_PATH:-.}/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_USERS_DISABLE_INITIAL_ADMIN_CREATION: true
    ports:
      - "3001:3000"

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.12.1
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: ${GRAFANA_POSTGRES_DATASOURCE:-postgresql://postgres:password@host.docker.internal:5432/flatfeestack?sslmode=disable}
    ports:
      - "9187:9187"
