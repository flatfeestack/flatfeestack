version: "3"

services:

  #######################
  # Applications:
  #######################

  prod-auth:
    hostname: prod-auth
    image: ghcr.io/flatfeestack/flatfeestack/fastauth:${TAG_IMAGE}
    networks:
      - prod
    env_file:
      - .prod.fastauth.env
    depends_on:
      prod-db:
        condition: service_healthy

  prod-backend:
    hostname: prod-backend
    image: ghcr.io/flatfeestack/flatfeestack/backend:${TAG_IMAGE}
    networks:
      - prod
    env_file:
      - .prod.backend.env
    depends_on:
      prod-db:
        condition: service_healthy

  prod-analysis-engine:
    hostname: test-analysis-engine
    image: ghcr.io/flatfeestack/flatfeestack/analysis-engine:${TAG_IMAGE}
    networks:
      - prod
    env_file:
      - .prod.analysis-engine.env

  prod-payout:
    hostname: prod-payout
    image: ghcr.io/flatfeestack/flatfeestack/payout:${TAG_IMAGE}
    networks:
      - prod
    env_file:
      - .prod.payout.env

  prod-frontend:
    hostname: prod-frontend
    image: ghcr.io/flatfeestack/flatfeestack/frontend:${TAG_IMAGE}
    networks:
      - prod
    environment:
      - PORT=9085

  #######################
  # Infrastructure:
  #######################

  prod-db:
    hostname: prod-db
    image: postgres:13-alpine
    volumes:
      - ${DATABASE_LOCAL_DIR}:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/0-init.sql
      - ./fastauth/init.sql:/docker-entrypoint-initdb.d/1-init.sql
    #https://docs.docker.com/engine/reference/builder/#healthcheck
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 15
    networks:
      - prod
    env_file:
      - .prod.db.env

networks:
  prod: