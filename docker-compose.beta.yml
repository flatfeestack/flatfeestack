version: "3"

services:

  #######################
  # Applications:
  #######################

  auth:
    container_name: flatfeestack-auth
    image: ghcr.io/flatfeestack/flatfeestack/fastauth:latest
    ports:
      - 9081:9081
    env_file:
      - .beta.auth.env
    depends_on:
      db:
        condition: service_healthy

  backend:
    container_name: flatfeestack-backend
    image: ghcr.io/flatfeestack/flatfeestack/backend:latest
    ports:
      - 9082:9082
    env_file:
      - .beta.backend.env
    depends_on:
      db:
        condition: service_healthy

  analysis-engine:
    container_name: flatfeestack-analysis-engine
    image: ghcr.io/flatfeestack/flatfeestack/analysis-engine:latest
    ports:
      - 9083:9083
    env_file:
      - .beta.analysis-engine.env

  payout:
    container_name: flatfeestack-payout
    image: ghcr.io/flatfeestack/flatfeestack/payout:latest
    ports:
      - 9084:9084
    extra_hosts:
      - ${HOSTS}
    env_file:
      - .beta.payout.env

  frontend:
    container_name: flatfeestack-frontend
    image: ghcr.io/flatfeestack/flatfeestack/frontend:latest
    ports:
      - 9085:9085
    environment:
      - PORT=9085

  #######################
  # Infrastructure:
  #######################

  db:
    container_name: flatfeestack-db
    image: postgres:13-alpine
    volumes:
      - ${DATABASE_LOCAL_DIR}:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/0-init.sql
      - ./fastauth/init.sql:/docker-entrypoint-initdb.d/1-init.sql
    ports:
      - 5432:5432
    #https://docs.docker.com/engine/reference/builder/#healthcheck
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 15
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=flatfeestack

  reverse-proxy:
    container_name: flatfeestack-caddy
    image: caddy:2-alpine
    volumes:
      - ./Caddyfile.beta:/etc/caddy/Caddyfile
    ports:
      - 80:80
      - 443:443
